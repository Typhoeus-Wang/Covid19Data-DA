shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read.csv("covid_19_clean_complete.csv")
## Change the data into the form we wanted
new_data <- data %>%
## Rule out the Lat and Long
select(Country.Region, Province.State, Date,
Confirmed, Deaths, Recovered, Active, WHO.Region) %>%
## Give each date a month
mutate(month = ifelse(Date %in% as.character(seq(from = as.Date("2020-01-01"), to = as.Date("2020-01-31"), by = "days")),"1",
ifelse(Date %in% as.character(seq(from = as.Date("2020-02-01"), to = as.Date("2020-02-29"), by = "days")),"2",
ifelse(Date %in% as.character(seq(from = as.Date("2020-03-01"), to = as.Date("2020-03-31"), by = "days")),"3",
ifelse(Date %in% as.character(seq(from = as.Date("2020-04-01"), to = as.Date("2020-04-30"), by = "days")),"4",
ifelse(Date %in% as.character(seq(from = as.Date("2020-05-01"), to = as.Date("2020-05-31"), by = "days")),"5",
ifelse(Date %in% as.character(seq(from = as.Date("2020-06-01"), to = as.Date("2020-06-30"), by = "days")),"6",
ifelse(Date %in% as.character(seq(from = as.Date("2020-07-01"), to = as.Date("2020-07-31"), by = "days")),"7","non")))))))) %>%
## Group by country first, then within the country, group by month
group_by(Country.Region, month) %>%
## Compute monthly total confirmed, death, recover, and active
mutate(tot_confirmed = sum(Confirmed, na.rm = TRUE)) %>%
mutate(tot_death = sum(Deaths, na.rm = TRUE)) %>%
mutate(tot_recover = sum(Recovered, na.rm = TRUE)) %>%
mutate(tot_active = sum(Active, na.rm = TRUE)) %>%
## Compute monthly death and recover rates
mutate(monthly_death_rate = tot_death / tot_confirmed) %>%
mutate(monthly_recover_rate = tot_recover / tot_confirmed)
runApp()
dataE <- new_data %>%
sample_n(100)
dataE <- new_data %>%
sample_n()
dataE <- new_data %>%
sample_n(10)
runApp()
runApp()
rm(dataE)
runApp()
